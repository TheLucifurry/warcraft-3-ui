{"version":3,"file":"HudHeader.0b52b6da.js","sources":["../../src/composables/useTime.ts","../../src/components/HudHeader.vue"],"sourcesContent":["import { Ref, ref } from 'vue';\n\nexport interface IUseTime {\n  value: Ref<number>\n  isDay: Ref<boolean>\n  set(v: number): void\n  add(v?: number): void\n  /** Returns progress percent (from 0 up to 1).\n   * If `isOfHalfDay` is true, returns progress in 6-18 (day) or 18-6 (night) interval\n   * else, returns progress in 18-18 (start of night - end of day) interval\n   */\n  getProgress(isOfHalfDay?: boolean): number\n  getTimeCaption(): string\n}\n\nfunction clampTime(value: number): number {\n  return value % 24;\n}\n\n// TODO: make basing on game minutes instead of hours, to get more flexible logic\nexport function useTime(startValue = 0): IUseTime {\n  const value = ref(startValue);\n  const isDay = ref(false);\n\n  function update(newValRaw: number) {\n    const newVal = clampTime(newValRaw);\n    value.value = newVal;\n    isDay.value = newVal >= 6 && newVal <= 18;\n  }\n\n  return {\n    value,\n    isDay,\n    set(val) {\n      update(val)\n    },\n    add(val = 1) {\n      update(value.value + val)\n    },\n    getProgress(isOfHalfDay = false) {\n      const limiter = isOfHalfDay ? 12 : 24;\n      return ((value.value + 6) % limiter) / limiter;\n    },\n    getTimeCaption() {\n      const minutes = `${Math.trunc((value.value % 1) * 60)}`.padStart(2, '0');\n      const hours = `${Math.trunc(value.value)}`.padStart(2, '0');\n      return `${hours}:${minutes}`;\n    }\n  };\n}","<script setup lang=\"ts\">\nimport { useElementBounding } from '@vueuse/core';\nimport { computed, PropType, ref } from 'vue';\nimport { IUseTime, useTime } from '../composables/useTime';\nimport { getAssetPath, getAssetUrl } from '../utils';\nimport Button from './base/Button.vue';\nimport { useConfig } from './ConfigProvider';\n\nconst props = defineProps({\n  time: {\n    type: Object as PropType<IUseTime>,\n  }\n});\n\nconst texEl = ref(null)\n\nconst {theme} = useConfig();\nconst {height} = useElementBounding(texEl);\nconst time = props.time ?? useTime()\n\nconst heightPx = computed(()=>`${height.value}px`);\nconst timeIndTex = computed(() => getAssetUrl('hud_time_indicator.png'));\nconst timeIndTexPosition = computed(() => `${time.getProgress() * 2 * 100}%`);\nconst timeIndDotsCount = computed(() => Math.trunc(time.getProgress(true) * 8) + 1);\n</script>\n\n<template>\n  <div class=\"hud-header\">\n    <div class=\"hud-header__under-tex-container\">\n      <div class=\"hud-header__time\"></div>\n      <div class=\"hud-header__time-dots\" :class=\"{'hud-header--day': time.isDay.value}\">\n        <div v-for=\"(i, ix) in timeIndDotsCount\" :key=\"ix\" />\n      </div>\n    </div>\n    <img ref=\"texEl\" class=\"hud-header__tex\" :src=\"getAssetPath('hud_header.png', theme)\">\n    <div class=\"hud-header__container\">\n      <div class=\"hud-header__actions\">\n        <Button class=\"hud-header__btn-action\">Задания</Button>\n        <Button class=\"hud-header__btn-action\">Меню</Button>\n        <Button class=\"hud-header__btn-action\" disabled>Союзники</Button>\n        <Button class=\"hud-header__btn-action\">Журнал</Button>\n      </div>\n      <div class=\"hud-header__res\">\n        <div class=\"hud-header__res-item\">\n          <img :src=\"getAssetPath('resource_icons/gold.png')\">\n        </div>\n        <div class=\"hud-header__res-item\">\n          <img :src=\"getAssetPath('resource_icons/lumber.png')\">\n        </div>\n        <div class=\"hud-header__res-item\">\n          <img :src=\"getAssetPath('resource_icons/supply.png')\">\n        </div>\n        <div class=\"hud-header__res-item hud-header__res-item-supply-info\">\n          <span>\n            Нет расходов\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.hud-header {\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: v-bind(heightPx);\n\n  & > * {\n    position: absolute;\n  }\n\n  &__under-tex-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    & .hud-header__time {\n      height: calc(v-bind(heightPx) * 0.6);\n      width: calc(v-bind(heightPx) * 0.6);\n      background: v-bind(timeIndTex);\n      background-size: cover;\n      background-position-x: v-bind(timeIndTexPosition);\n      border-radius: 50%;\n    }\n    & .hud-header__time-dots {\n      position: absolute;\n      transform: translateY(-3%) scaleY(0.95);\n\n      &.hud-header--day > * {\n        background: yellow;\n      }\n      & > * {\n        --dot-size: calc(v-bind(heightPx) * 0.15);\n\n        position: absolute;\n        top: calc(50% - (var(--dot-size) / 2));\n        left: calc(50% - (var(--dot-size) / 2));\n        width: var(--dot-size);\n        height: var(--dot-size);\n        background: cyan;\n        border-radius: 50%;\n\n        @for $i from 0 through 7 {\n          &:nth-child(#{$i + 1}) {\n            transform: rotate($i * 45deg - 90deg) translate(calc(v-bind(heightPx) * 0.4)) rotate($i * -45deg - 90deg);\n          }\n        }\n      }\n    }\n  }\n  &__tex {\n    width: 100%;\n  }\n  &__container {\n    width: 100%;\n    height: 50%;\n    display: flex;\n  }\n  &__actions {\n    width: 50%;\n    height: 100%;\n    display: flex;\n    padding: 0.3% 7.5% 0.5% 0.5%;\n    box-sizing: border-box;\n  }\n  &__btn-action {\n    width: 24%;\n    height: 100%;\n    & + & {\n      margin-left: 1.2%;\n    }\n  }\n  &__res{\n    width: 50%;\n    display: flex;\n    padding: 0.3% 0.3% 0.5% 7.5%;\n    box-sizing: border-box;\n    justify-content: space-between;\n\n    & img {\n      height: 100%;\n    }\n  }\n  &__res-item {\n    height: 100%;\n    width: 23%;\n  }\n  &__res-item-supply-info {\n    color: #00f000;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n</style>\n"],"names":["clampTime","value","__name","useTime","startValue","ref","isDay","update","newValRaw","newVal","val","isOfHalfDay","limiter","minutes","texEl","theme","useConfig","height","useElementBounding","time","_a","props","heightPx","computed","timeIndTex","getAssetUrl","timeIndTexPosition","timeIndDotsCount"],"mappings":"uWAeA,SAASA,EAAUC,EAAuB,CACxC,OAAOA,EAAQ,EACjB,CAFSC,EAAAF,EAAA,aAKO,SAAAG,EAAQC,EAAa,EAAa,CAC1C,MAAAH,EAAQI,EAAID,CAAU,EACtBE,EAAQD,EAAI,EAAK,EAEvB,SAASE,EAAOC,EAAmB,CAC3B,MAAAC,EAAST,EAAUQ,CAAS,EAClCP,EAAM,MAAQQ,EACRH,EAAA,MAAQG,GAAU,GAAKA,GAAU,EACzC,CAJS,OAAAP,EAAAK,EAAA,UAMF,CACL,MAAAN,EACA,MAAAK,EACA,IAAII,EAAK,CACPH,EAAOG,CAAG,CACZ,EACA,IAAIA,EAAM,EAAG,CACJH,EAAAN,EAAM,MAAQS,CAAG,CAC1B,EACA,YAAYC,EAAc,GAAO,CACzB,MAAAC,EAAUD,EAAc,GAAK,GAC1B,OAAAV,EAAM,MAAQ,GAAKW,EAAWA,CACzC,EACA,gBAAiB,CACT,MAAAC,EAAU,GAAG,KAAK,MAAOZ,EAAM,MAAQ,EAAK,EAAE,IAAI,SAAS,EAAG,GAAG,EAEvE,MAAO,GADO,GAAG,KAAK,MAAMA,EAAM,KAAK,IAAI,SAAS,EAAG,GAAG,KACvCY,GACrB,CAAA,CAEJ,CA7BgBX,EAAAC,EAAA,wpBCNV,MAAAW,EAAQT,EAAI,IAAI,EAEhB,CAAC,MAAAU,GAASC,IACV,CAAC,OAAAC,CAAA,EAAUC,EAAmBJ,CAAK,EACnCK,GAAOC,EAAAC,EAAM,OAAN,KAAAD,EAAcjB,EAAQ,EAE7BmB,EAAWC,EAAS,IAAI,GAAGN,EAAO,SAAS,EAC3CO,EAAaD,EAAS,IAAME,EAAY,wBAAwB,CAAC,EACjEC,EAAqBH,EAAS,IAAM,GAAGJ,EAAK,YAAY,EAAI,EAAI,MAAM,EACtEQ,EAAmBJ,EAAS,IAAM,KAAK,MAAMJ,EAAK,YAAY,EAAI,EAAI,CAAC,EAAI,CAAC"}