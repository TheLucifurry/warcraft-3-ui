{"version":3,"file":"ConfigProvider.3e3a8037.js","sources":["../../src/consts.ts","../../src/components/ConfigProvider.ts"],"sourcesContent":["export enum RACE_KEY {\n  HUMAN = 'hum',\n  NIGHT_ELF = 'nel',\n  ORC = 'orc',\n  UNDEAD = 'und',\n}\n","import {\n  defineComponent, inject, PropType, provide, renderSlot, Component,\n} from 'vue';\nimport { RACE_KEY } from '../consts';\n\nconst injectKey = 'wc3ui-config';\n\ntype InternalAPI = {\n  readonly theme: Readonly<RACE_KEY>\n}\n\ntype IConfigAPI = {\n  theme: RACE_KEY\n}\n\nexport type WidgetsList = Record<string, Component>;\n\nexport default defineComponent({\n  props: {\n    theme: {\n      type: String as PropType<RACE_KEY>,\n      default: RACE_KEY.HUMAN,\n    },\n  },\n  setup(props, ctx) {\n    const { theme } = props;\n\n    const api: InternalAPI = { theme };\n    provide(injectKey, api);\n\n    return () => renderSlot(ctx.slots, 'default');\n  },\n});\n\nexport function useConfig(): IConfigAPI {\n  const { theme } = inject(injectKey) as InternalAPI || {\n    theme: RACE_KEY.HUMAN\n  };\n\n  return {\n    theme,\n  };\n}\n"],"names":["RACE_KEY","injectKey","ConfigProvider","defineComponent","props","ctx","theme","provide","renderSlot","useConfig","inject","__name"],"mappings":"sJAAY,IAAAA,GAAAA,IACVA,EAAA,MAAQ,MACRA,EAAA,UAAY,MACZA,EAAA,IAAM,MACNA,EAAA,OAAS,MAJCA,IAAAA,GAAA,CAAA,CAAA,ECKZ,MAAMC,EAAY,eAYlBC,EAAeC,EAAgB,CAC7B,MAAO,CACL,MAAO,CACL,KAAM,OACN,QAASH,EAAS,KACpB,CACF,EACA,MAAMI,EAAOC,EAAK,CACV,KAAA,CAAE,MAAAC,CAAU,EAAAF,EAGlB,OAAAG,EAAQN,EADiB,CAAE,MAAAK,EACL,EAEf,IAAME,EAAWH,EAAI,MAAO,SAAS,CAC9C,CACF,CAAC,EAEM,SAASI,GAAwB,CACtC,KAAM,CAAE,MAAAH,CAAA,EAAUI,EAAOT,CAAS,GAAoB,CACpD,MAAOD,EAAS,KAAA,EAGX,MAAA,CACL,MAAAM,CAAA,CAEJ,CARgBK,EAAAF,EAAA"}